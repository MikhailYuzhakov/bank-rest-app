openapi: 3.1.0
info:
  title: Library application
  description: Get all library books
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Generated server url
security:
  - bearerAuth: []
paths:
  /token/create:
    post:
      tags:
        - rest-token-controller
      operationId: createToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TokenResponse"
  /api/v1/users/update:
    post:
      tags:
        - rest-user-controller
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
  /api/v1/users/create:
    post:
      tags:
        - rest-user-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
  /api/v1/cards/transaction:
    post:
      tags:
        - bank-card-rest-controller
      operationId: transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BankCardsDTO"
  /api/v1/cards/delete:
    post:
      tags:
        - bank-card-rest-controller
      operationId: deleteCard
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CardRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/cards/block:
    post:
      tags:
        - bank-card-rest-controller
      operationId: blockCard
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CardRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BankCardsDTO"
  /api/v1/cards/activate:
    post:
      tags:
        - bank-card-rest-controller
      operationId: activateCard
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CardRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BankCardsDTO"
  /api/v1/users:
    get:
      tags:
        - rest-user-controller
      operationId: getUsers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserDTO"
  /api/v1/users/{username}:
    get:
      tags:
        - rest-user-controller
      operationId: getUser
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
  /api/v1/users/delete/{username}:
    get:
      tags:
        - rest-user-controller
      operationId: deleteUser
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/cards:
    get:
      tags:
        - bank-card-rest-controller
      operationId: getAllCards
      parameters:
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - REQUESTED_FOR_BLOCK
              - BLOCKED
              - EXPIRED
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: search
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedModelBankCardsDTO"
  /api/v1/cards/create/{username}:
    get:
      tags:
        - bank-card-rest-controller
      operationId: createCard
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/BankCardsDTO"
components:
  schemas:
    TokenRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    TokenResponse:
      type: object
      properties:
        token:
          type: string
    UserDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
        username:
          type: string
        password:
          type: string
        roleName:
          type: string
    TransactionDTO:
      type: object
      properties:
        debitCardNumber:
          type: string
        creditCardNumber:
          type: string
        sum:
          type: number
          format: double
    BankCardsDTO:
      type: object
      properties:
        maskedCardNumber:
          type: string
        encryptedCardNumber:
          type: string
        expirationDate:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - ACTIVE
            - REQUESTED_FOR_BLOCK
            - BLOCKED
            - EXPIRED
        balance:
          type: number
          format: double
        cardOwnerUsername:
          type: string
    CardRequest:
      type: object
      properties:
        encryptedCardNumber:
          type: string
    PageMetadata:
      type: object
      properties:
        size:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
    PagedModelBankCardsDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/BankCardsDTO"
        page:
          $ref: "#/components/schemas/PageMetadata"
  securitySchemes:
    bearerAuth:
      type: http
      description: JWT Authorization
      in: header
      scheme: bearer
      bearerFormat: JWT